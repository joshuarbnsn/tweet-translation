<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:twitter="http://www.mulesoft.org/schema/mule/twitter" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:context="http://www.springframework.org/schema/context" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/twitter http://www.mulesoft.org/schema/mule/twitter/current/mule-twitter.xsd">
    <context:property-placeholder location="api.properties" />
    <http:listener-config name="httpListenerConfig" host="0.0.0.0" port="${http.port}" doc:name="HTTP Listener Configuration"/>
    <http:request-config name="HTTP_Request_Translate" host="translation.googleapis.com" port="443" protocol="HTTPS" doc:name="HTTP Request Configuration"/>
    
    <apikit:config name="apiConfig" raml="api.raml" consoleEnabled="false" doc:name="Router"/>
    <twitter:config name="Twitter__Configuration" accessKey="${twitter_access_key}" accessSecret="${twitter_access_secret}" consumerKey="${twitter_consumer_key}" consumerSecret="${twitter_consumer_secret}" doc:name="Twitter: Configuration"/>
    
    <flow name="api-main">
        <http:listener config-ref="httpListenerConfig" path="/api/*" doc:name="HTTP"/>
        <apikit:router config-ref="apiConfig" doc:name="APIkit Router"/>
        <exception-strategy ref="apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="api-console">
        <http:listener config-ref="httpListenerConfig" path="/console/*" doc:name="HTTP"/>
        <apikit:console config-ref="apiConfig" doc:name="APIkit Console"/>
    </flow>
    
    <!--***************************************************************************
    	Post Message Flow
     ***************************************************************************-->
    <flow name="post:/messages:application/json:apiConfig">
        <logger level="INFO" message="#[message.payloadAs(java.lang.String)]" doc:name="Log Initial Payload"/>
        
        <json:json-to-object-transformer returnClass="com.mulesoft.demo.translation.dto.input.Message" doc:name="JSON to Object"/>
        
        <enricher target="#[variable:language]" doc:name="Message Enricher">
       		<flow-ref name="detectLanguage" doc:name="Detect Language"/>
   		</enricher>
   		
   		<logger level="INFO" message="#['dectected language: ' + flowVars.language]" doc:name="Logger"/>
        
   		<enricher target="#[variable:translation]" doc:name="Message Enricher">
       		<flow-ref name="translateMessage" doc:name="Translate Message"/>
   		</enricher>
   		
        <flow-ref name="postMessage" doc:name="Post Message to Group"/> 
   	</flow>
    
    <!--***************************************************************************
    	Detect Language Flow
     ***************************************************************************-->
    <flow name="detectLanguage">
    	<dw:transform-message doc:name="Transform To Detect Input" metadata:id="cd66fb66-5dd5-4251-8cb4-7dc3a0178a50">
            <dw:input-payload mimeType="application/java"/>
            <dw:set-payload>
            	<![CDATA[%dw 1.0
				%output application/json
				---
				{
					q: payload.text,
					key: p('google_key')
				}]]>
			</dw:set-payload>
        </dw:transform-message>
        
        <http:request config-ref="HTTP_Request_Translate" path="/language/translate/v2/detect?key=${google_key}" method="POST" doc:name="Google Detect"> 
	        <http:request-builder>
	        	<http:header headerName="Content-Type" value="application/json"/>
	        </http:request-builder>
	        <http:success-status-code-validator values="200..499"/>
        </http:request>
        
        <logger level="INFO" message="#[message.payloadAs(java.lang.String)]" doc:name="Logger"/>
        <dw:transform-message doc:name="Transform From Detect Response" metadata:id="c6694744-99a7-4c9b-a490-6f9903774b80">
            <dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
				%output application/java
				---
				{
					detections: payload.data.detections[0] map ((det, indexOfDetection) -> {
						language: det.language,
						confidence: det.confidence
					})
				} as :object {
					class : "com.mulesoft.demo.translation.dto.response.DetectLanguageResponseCollection"
				}]]>
			</dw:set-payload>
        </dw:transform-message>
        <custom-transformer returnClass="java.lang.String" class="com.mulesoft.demo.translation.transformers.DetectLanguages" doc:name="Detect Languages"/>
    </flow>
    
    <!--***************************************************************************
    	Translate Flow
     ***************************************************************************-->
    <flow name="translateMessage">
    	
    	<choice doc:name="Choice">
        	<when expression="#[flowVars.language != '${default_language}']">
        		<dw:transform-message doc:name="Transform To Translation Request" >
		            <dw:input-payload mimeType="application/java"/>
		            <dw:set-payload>
		            	<![CDATA[%dw 1.0
						%output application/json
						---
						{
							q: payload.text,
							target: p('default_language'),
							source: flowVars.language,
							key: p('google_key')
						}]]>
					</dw:set-payload>
		        </dw:transform-message>
		        
		        <http:request config-ref="HTTP_Request_Translate" path="/language/translate/v2?key=${google_key}" method="POST" doc:name="Google Translate"> 
			        <http:request-builder>
			        	<http:header headerName="Content-Type" value="application/json"/>
			        </http:request-builder>
			        <http:success-status-code-validator values="200..499"/>
		        </http:request>
		        
		        <logger level="INFO" message="#[message.payloadAs(java.lang.String)]" doc:name="Logger"/>
		        
		        <dw:transform-message doc:name="Transform Message" metadata:id="fe2a9b98-be05-4f7c-9fdc-0801dcd41488">
		            <dw:input-payload mimeType="application/json"/>
		            <dw:set-payload><![CDATA[%dw 1.0
						%output application/java
						---
						payload.data.translations[0].translatedText]]>
					</dw:set-payload>
		        </dw:transform-message>
        	</when>
        	<otherwise>
        		<logger level="INFO" message="No Subtitles Needed. Skipping translation flow." doc:name="No Subtitles Needed"/>
        		<set-payload doc:name="Set Payload" value=" "/>
        	</otherwise>
        </choice>
        
    	    	
    </flow>
    
    <!--***************************************************************************
    	Post Message Flow
     ***************************************************************************-->
    <flow name="postMessage">
    	<logger level="INFO" message="Posting message to Twitter Group" doc:name="Logger"/>
        <custom-transformer returnClass="java.lang.String" class="com.mulesoft.demo.translation.transformers.MessageToTweet" doc:name="Build Tweet"/>
        <logger level="INFO" message="#[message.payloadAs(java.lang.String)]" doc:name="Logger"/>
        <twitter:update-status config-ref="Twitter__Configuration" status="#[payload]" doc:name="Twitter"/>
        <logger level="INFO" message="#[message.payloadAs(java.lang.String)]" doc:name="Logger"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        
    </flow>
    
    <apikit:mapping-exception-strategy name="apiKitGlobalExceptionMapping">
    
    	<apikit:mapping statusCode="403">
            <apikit:exception value="org.mule.module.http.internal.request.ResponseValidatorException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Duplicate message rejected&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="499">
            <apikit:exception value="java.lang.Exception" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unexpected exception&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
